---
import Layout from "@/layouts/Layout.astro";
---

<Layout title="Eliminar Cuenta | Novicompu">
  <section class="pt-28 pb-20 min-h-[60vh] bg-gray-50" aria-labelledby="delete-heading">
    <div class="max-w-xl mx-auto px-5">
      <h1 id="delete-heading" class="text-3xl font-bold text-gray-900">Solicitar eliminación de cuenta</h1>
      <p class="mt-4 text-sm text-gray-600 leading-relaxed">Completa el formulario para enviar una solicitud de eliminación de tu cuenta. Procesaremos la solicitud y recibirás confirmación por correo. Esta acción es irreversible.</p>

      <form id="delete-account-form" class="mt-8 space-y-6 bg-white p-6 rounded-lg shadow-sm border border-gray-100" method="post" novalidate>
        <div class="space-y-1">
          <label for="email" class="block text-sm font-medium text-gray-800">Correo electrónico <span class="text-red-600">*</span></label>
          <input id="email" name="email" type="email" required placeholder="tu@correo.com" class="w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-[#264193] focus:border-[#264193]" />
          <p class="text-xs text-gray-500">Debe coincidir con el correo registrado.</p>
        </div>

        <div class="space-y-1">
          <label for="userId" class="block text-sm font-medium text-gray-800">ID de usuario (opcional)</label>
          <input id="userId" name="userId" type="text" placeholder="Ej: 12345" class="w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-[#264193] focus:border-[#264193]" />
        </div>

        <div class="space-y-1">
          <label for="motivo" class="block text-sm font-medium text-gray-800">Motivo (opcional)</label>
          <textarea id="motivo" name="motivo" rows="4" placeholder="Opcional: Cuéntanos el motivo" class="w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-[#264193] focus:border-[#264193] resize-none"></textarea>
        </div>

        <div class="flex items-start gap-2">
          <input id="confirm" name="confirm" type="checkbox" required class="mt-0.5 h-4 w-4 rounded border-gray-300 text-[#264193] focus:ring-[#264193]" />
          <label for="confirm" class="text-xs text-gray-600">Confirmo que deseo eliminar mi cuenta y entiendo que esta acción no se puede deshacer.</label>
        </div>

        <button type="submit" class="w-full inline-flex justify-center items-center gap-2 rounded-md bg-[#264193] hover:bg-[#1d325f] text-white text-sm font-medium px-5 py-2.5 transition-colors focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-[#264193]">
          <span>Enviar solicitud</span>
        </button>

        <p id="form-status" class="text-sm font-medium"></p>
      </form>

      <div class="mt-10 text-xs text-gray-500 leading-relaxed">
        <p>Si no puedes acceder al correo registrado, escribe a <a href="mailto:soporte@novicompu.com" class="underline decoration-dotted hover:text-gray-700">soporte@novicompu.com</a>.</p>
      </div>
    </div>
  </section>
</Layout>

<script>
// Minimal client-side handler; replace fetch URL with real backend endpoint when available
const form = document.getElementById('delete-account-form') as HTMLFormElement | null;
const statusEl = document.getElementById('form-status');

function setStatus(msg, type='info'){ 
  if(!statusEl) return; 
  statusEl.textContent = msg; 
  statusEl.className = `mt-4 text-sm font-medium ${type==='error' ? 'text-red-600' : type==='success' ? 'text-green-600' : 'text-gray-600'}`;
}

if(form){
  form.addEventListener('submit', async (e)=>{
    e.preventDefault();
    setStatus('Enviando solicitud...');

  const formData = new FormData(form as HTMLFormElement);
    const payload = Object.fromEntries(formData.entries());

    if(!payload.email){
      setStatus('El correo es obligatorio.', 'error');
      return;
    }

    try {
      // Placeholder endpoint – replace with your backend route
      const res = await fetch('/api/eliminar-cuenta', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload)
      });

      if(!res.ok) throw new Error('Error en la solicitud');

      setStatus('Solicitud enviada. Revisaremos y te contactaremos por correo.', 'success');
      if (form instanceof HTMLFormElement) {
        form.reset();
      }
    } catch (err){
      setStatus('No se pudo enviar. Intenta más tarde.', 'error');
    }
  });
}
</script>
